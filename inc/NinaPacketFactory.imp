// Copyright (c) 2011, Jonathan Calmels <jbjcalmels@gmail.com>
//
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

/*!
 * @file NinaPacketFactory.imp
 * @brief Implements a packet manager to craft packets upon bytes stream protocols
 * @author Jonathan Calmels
 * @date Fri Nov 11 2011
 */

NINA_BEGIN_NAMESPACE_DECL

template <class IN_PACKET>
PacketFactory<IN_PACKET>::PacketFactory()
{
	mSequence.push_back('\0');
	::memset(&mWheel, 0, sizeof mWheel);
}

template <class IN_PACKET>
PacketFactory<IN_PACKET>::PacketFactory(std::string const& sequence)
	: mSequence(sequence)
{
	::memset(&mWheel, 0, sizeof mWheel);
}

template <class IN_PACKET>
PacketFactory<IN_PACKET>::~PacketFactory()
{
}

template <class IN_PACKET> void
PacketFactory<IN_PACKET>::pushStream(std::string const& record)
{
	size_t	recordSize = record.size();
	size_t	sequenceSize = mSequence.size();

	for (size_t i = 0; i < recordSize; ++i) {
		if (!record.compare(i, sequenceSize, mSequence)) { // Sequence matching
			updatePayload();
			i += sequenceSize - 1;
			mWheel.wPtr = (mWheel.wPtr + sequenceSize) % BUF_SIZE;
			mWheel.rPtr = mWheel.wPtr;
			forgePacket();
			continue;
		}
		mWheel.data[mWheel.wPtr] = record[i];
		mWheel.wPtr = (mWheel.wPtr + 1) % BUF_SIZE;
		if ((mWheel.wPtr + 1) % BUF_SIZE == mWheel.rPtr) { // Buffer full without matching the sequence
			updatePayload();
			mWheel.rPtr = 0;
			mWheel.wPtr = 0;
		}
	}
}

NINA_END_NAMESPACE_DECL
